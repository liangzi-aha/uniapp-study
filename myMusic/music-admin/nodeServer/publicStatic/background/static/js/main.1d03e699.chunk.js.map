{"version":3,"sources":["token.js","utils/common.js","router/RoutingGuard.js","fetch/fetch.js","fetch/api.js","page/login/index.jsx","page/notFound/index.jsx","static/img/3.jpg","components/musicList/index.jsx","components/Transfer/index.jsx","components/classify/index.jsx","components/userList/index.jsx","static/img/1.jpg","components/theme/index.jsx","page/home/index.jsx","router/router.js","App.js","index.js"],"names":["jwt","require","module","exports","verify","token","secret","err","decoded","setCookie","c_name","value","expiredays","exdate","Date","setDate","getDate","document","cookie","escape","toGMTString","getCookie","name","arr","reg","RegExp","match","unescape","delCookie","domain","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","resourceUrl","RoutingGuard","this","props","routerList","pathname","location","targetRouterConfig","find","item","split","path","replace","to","exact","component","auth","React","Component","history","createHashHistory","axios","defaults","timeout","headers","post","withCredentials","baseURL","requestNum","url","params","then","response","data","catch","interceptors","request","use","config","getElementsByClassName","style","zIndex","console","log","status","code","push","go","message","success","fetch","login","musicList","addMusic","eidtMusic","delMusic","getMusicClassify","addMusicClassify","editClassifyBind","editMusicClassify","delMusicClassify","userList","delUser","state","checked","userAccount","userPassword","loginFrom","onFinish","values","username","md5","password","res","localToken","userCookie","onFinishFailed","errorInfo","setState","setFieldsValue","remember","className","autoComplete","ref","com","Item","label","validateTrigger","rules","required","type","placeholder","valuePropName","onChange","htmlType","size","notFound","columns","title","dataIndex","key","render","text","icon","marginRight","onClick","EditTable","onConfirm","deleteTable","okText","cancelText","placement","danger","pagination","defaultPageSize","visible","disabled","bounds","left","top","bottom","right","moduleTitle","fileList","fileMusicList","fileLyricList","previewVisible","previewImage","previewTitle","moduleStatus","editId","musicName","musicAuthor","loading","draggleRef","createRef","renderTable","id","uid","musicImg","length","filePath","musicUrl","lyric","handleOk","e","musicFrom","validateFields","uploadImg","uploadMusic","uploadLyric","handleCancel","handlePriviewCancel","onStart","event","uiData","window","documentElement","clientWidth","clientHeight","targetRect","current","getBoundingClientRect","x","y","onMusicChange","onLyricChange","handlePreview","a","preview","originFileObj","substring","lastIndexOf","normFile","Array","isArray","subTitle","dataSource","rowKey","bordered","width","cursor","onMouseOver","onMouseOut","destroyOnClose","onOk","onCancel","modalRender","modal","labelCol","span","wrapperCol","initialValues","getValueFromEvent","validator","_","Error","action","multiple","defaultFileList","maxCount","listType","accept","rotate","onPreview","footer","alt","src","transfer","allList","targetKeys","selectKey","map","Number","handleChange","nextTargetKeys","direction","moveKeys","mapData","ele","getSelectId","showSearch","titles","locale","itemUnit","itemsUnit","searchPlaceholder","onSelectChange","handleSelectChange","oneWay","listStyle","height","marginBottom","textAlign","cancel","classify","MusicClassifyList","fontSize","color","bindMusic","classifyName","transferVisible","getMusicList","music_classify_name","music_classify_img","JSON","parse","music_classify_content","classifyList","stringify","classifyImg","handleTransferCancel","rowExpandable","record","expandedRowRender","index","indent","expanded","list","forEach","expandable","theme","themeImg","SubMenu","Menu","Sider","openKeys","changeTheme","handleClick","onOpenChange","keys","logOut","overlay","arrow","headImg","selectedKeys","mode","from","router","Login","Home","App","LoadingOutlined","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.1d03e699.chunk.js","sourcesContent":["// 封装生成token，解析token方法\r\nvar jwt = require('jsonwebtoken');\r\n\r\nmodule.exports = {\r\n    verify:function(token,secret){\r\n        if(token){\r\n            // 返回加密的token\r\n            return jwt.verify(token,secret,function(err,decoded){\r\n                if(err){\r\n                    return {'success':false};\r\n                }else{\r\n                    return {\r\n                        'success':true,\r\n                        'decoded':decoded\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n}","// 设置cookie\r\nexport function setCookie(c_name, value, expiredays) {\r\n    if (expiredays) {\r\n        var exdate = new Date();\r\n        exdate.setDate(exdate.getDate() + expiredays);\r\n        document.cookie = c_name + \"=\" + escape(value) + \";expires = \" + exdate.toGMTString() + \";path = /;\";\r\n    } else {\r\n        document.cookie = c_name + \"=\" + escape(value) + \";path = /;\";\r\n    }\r\n}\r\n\r\n// 获取cookie\r\nexport function getCookie(name) {\r\n    var arr;\r\n    var reg = new RegExp(\"(^| )\" + name + \"=([^;]*)(;|$)\");\r\n    arr = document.cookie.match(reg);\r\n    if (document.cookie.match(reg)) {\r\n        return unescape(arr[2]);\r\n    } else {\r\n        return '';\r\n    }\r\n}\r\n// 删除cookie\r\nexport function delCookie(name, domain, value = '') {\r\n    var exdate = new Date();\r\n    exdate.setDate(exdate.getDate() - 1);\r\n    if (name != null && domain) {\r\n        document.cookie = name + \"=\" + escape(value) + \";expires = \" + exdate.toGMTString() + \";path = /;domain=\" + domain;\r\n    } else {\r\n        document.cookie = name + \"=\" + escape(value) + \";expires = \" + exdate.toGMTString() + \";path = /;\";\r\n    }\r\n}\r\n\r\n// 图片转base64\r\nexport function getBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n    });\r\n}\r\n\r\nexport const apiBaseUrl = process.env.NODE_ENV === 'production' ? '' : '/api';\r\nexport const resourceUrl = 'http://47.102.107.202:8080/';   //http://localhost:8080/  || http://47.102.107.202:8080/","import React from 'react';\r\nimport { Route,Redirect } from \"react-router-dom\";\r\nimport { getCookie } from '../utils/common';\r\n\r\nexport default class RoutingGuard extends React.Component{\r\n    render() {\r\n        const { routerList, location } = this.props;\r\n\r\n        const { pathname } = location;\r\n        \r\n        const token = getCookie('token');\r\n        // 检索路由\r\n        const targetRouterConfig = routerList.find(item => {\r\n            return '/' + pathname.split('/')[1] === item.path.replace(/\\s*/g,\"\")\r\n        });\r\n\r\n        if (token) {\r\n            // 如果是登陆状态，想要跳转到登陆，重定向到主页\r\n            if (pathname === \"/login\" || pathname === '/') {\r\n              return <Redirect to=\"/home\" />;\r\n            } else {\r\n              // 如果路由合法，就跳转到相应的路由\r\n              if (targetRouterConfig) {\r\n                return <Route path={pathname} exact={true} component={targetRouterConfig.component} />;\r\n              } else {\r\n                // 如果路由不合法，重定向到 404 页面\r\n                return <Redirect to=\"/404\" />;\r\n              }\r\n            }\r\n          } else {\r\n            // 没有登录\r\n            if(pathname === '/'){  // 没有登录,默认 / 路由跳转 /login 页面\r\n                return <Redirect to=\"/login\" />;\r\n              } else if (targetRouterConfig && !targetRouterConfig.auth) {  // 合法路由 and （auth：false）该路由不需要登录\r\n                const { component } = targetRouterConfig;\r\n                return <Route exact path={pathname} component={component} />\r\n              } else if (targetRouterConfig && targetRouterConfig.auth) {  // 合法路由 and （auth：false）该路由需要登录\r\n                return <Redirect to=\"/login\" />;\r\n              } else {\r\n                // 非登陆状态下，路由不合法时，重定向至 404\r\n                return <Redirect to=\"/404\" />;\r\n              }\r\n          }\r\n    }\r\n}","import axios from 'axios';\r\nimport { createHashHistory } from 'history';\r\nimport {message} from 'antd';\r\nimport { delCookie } from '../utils/common'\r\n\r\nconst history = createHashHistory();\r\n\r\nconst apiBaseUrl = process.env.NODE_ENV === 'production' ? '' : '/api';\r\n\r\n// axios 配置\r\naxios.defaults.timeout = 60000;\r\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=UTF-8';\r\naxios.defaults.withCredentials = true;\r\naxios.defaults.baseURL = apiBaseUrl + '/admin';\r\n\r\nlet requestNum = 0;\r\n\r\n// 请求拦截\r\naxios.interceptors.request.use(config => {\r\n    requestNum++;\r\n    // console.log(document.getElementsByClassName(\"myLoading\"))\r\n    document.getElementsByClassName(\"myLoading\")[0].style.zIndex = '10000';\r\n    return config;\r\n}, error => {\r\n    console.log(error)\r\n    return Promise.reject(error)\r\n})\r\n\r\n// 响应拦截\r\naxios.interceptors.response.use(response => {\r\n    console.log(response);\r\n    requestNum--;\r\n    if(requestNum === 0){\r\n        document.getElementsByClassName(\"myLoading\")[0].style.zIndex = '-100';\r\n    }\r\n    // 未登录\r\n    if(response.status === 207 && response.data.code === '0000'){\r\n        delCookie('token');\r\n        history.push('/login');\r\n        history.go();\r\n        message.error(response.data.message);\r\n    }else if(response.data.success === false){\r\n        message.error(response.data.message);\r\n    }\r\n    return response;\r\n}, error => {\r\n    document.getElementsByClassName(\"myLoading\")[0].style.zIndex = '-100';\r\n    return Promise.reject(error)\r\n})\r\n\r\n\r\nexport function post(url, params) {\r\n    return new Promise((resolve, reject) => {\r\n        axios.post(url, params)\r\n            .then(response => {\r\n                resolve(response.data)\r\n            }, err => {\r\n                reject(err)\r\n            })\r\n            .catch((error) => {\r\n                reject(error)\r\n            })\r\n    })\r\n}\r\n\r\nexport function get(url, params) {\r\n    return new Promise((resolve, reject) => {\r\n        axios.get(url + \"?\" + params)\r\n            .then(response => {\r\n                resolve(response.data)\r\n            }, err => {\r\n                reject(err)\r\n            })\r\n            .catch((error) => {\r\n                reject(error)\r\n            })\r\n    })\r\n}","import { post } from './fetch';\r\n\r\nconst fetch = {\r\n    login: (params)=>{\r\n        return post('/login',params);\r\n    },\r\n    musicList: (params)=>{\r\n        return post('/musicList',params);\r\n    },\r\n    addMusic: (params)=>{\r\n        return post('/addMusic',params);\r\n    },\r\n    eidtMusic: (params)=>{\r\n        return post('/eidtMusic',params);\r\n    },\r\n    delMusic: (params)=>{\r\n        return post('/delMusic',params);\r\n    },\r\n    getMusicClassify: (params)=>{\r\n        return post('/getMusicClassify',params);\r\n    },\r\n    addMusicClassify: (params)=>{\r\n        return post('/addMusicClassify',params);\r\n    },\r\n    editClassifyBind: (params)=>{\r\n        return post('/editClassifyBind',params);\r\n    },\r\n    editMusicClassify: (params)=>{\r\n        return post('/editMusicClassify',params);\r\n    },\r\n    delMusicClassify: (params)=>{\r\n        return post('/delMusicClassify',params);\r\n    },\r\n    userList: (params)=>{\r\n        return post('/userList',params);\r\n    },\r\n    delUser: (params)=>{\r\n        return post('/delUser',params);\r\n    },\r\n}\r\n\r\nexport default fetch;\r\n\r\n","import React from 'react';\r\nimport './index.less';\r\nimport { Form, Input, Button, Checkbox, message } from 'antd';\r\nimport fetch from '../../fetch/api';\r\nimport md5 from 'md5';\r\nimport { getCookie, setCookie, delCookie } from '../../utils/common';\r\nimport token from '../../token'\r\n\r\n\r\nexport default class login extends React.Component {\r\n    state = {\r\n        checked: false,\r\n        userAccount: '',\r\n        userPassword: '',\r\n        loginFrom: '',\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (getCookie('userAccount') && getCookie('userPassword')) {\r\n            this.setState({\r\n                userAccount: getCookie('userAccount'),\r\n                userPassword: getCookie('userPassword'),\r\n                checked: true,\r\n            },()=>{\r\n                this.loginFrom.setFieldsValue({\r\n                    username: this.state.userAccount,\r\n                    password: this.state.userPassword,\r\n                    remember: this.state.checked\r\n                })\r\n            })\r\n            \r\n           \r\n        }\r\n    }\r\n\r\n    onFinish = (values) => {\r\n        fetch.login({\r\n            userAccount: values.username,\r\n            userPassword: this.state.userPassword || md5(values.password)\r\n        }).then(res => {\r\n            if (res.success) {\r\n                this.props.history.push('/home');\r\n                message.success(res.message);\r\n                if (this.state.checked === true) {\r\n                    const localToken = getCookie('token');\r\n                    const userCookie = token.verify(localToken, '李勇良');\r\n                    setCookie('userAccount', userCookie.decoded.data.userAccount);\r\n                    setCookie('userPassword', userCookie.decoded.data.userPassword);\r\n                } else {\r\n                    delCookie('userAccount');\r\n                    delCookie('userPassword');\r\n                }\r\n            }\r\n        })\r\n    };\r\n\r\n    onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    render() {\r\n        const { userAccount, userPassword,checked } = this.state;\r\n        console.log(userAccount, userPassword,checked)\r\n\r\n        return (\r\n            <div className=\"login\">\r\n                <div className=\"login_center\">\r\n                    <p>良子音乐</p>\r\n                    <Form\r\n                        name=\"basic\"\r\n                        onFinish={this.onFinish}\r\n                        onFinishFailed={this.onFinishFailed}\r\n                        autoComplete=\"off\"\r\n                        ref={com => { this.loginFrom = com }}\r\n                    >\r\n                        <Form.Item\r\n                            label=\"账号\"\r\n                            name=\"username\"\r\n                            validateTrigger={['onBlur']}\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请输入账号!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input type=\"text\"  placeholder=\"请输入账号\" />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"密码\"\r\n                            name=\"password\"\r\n                            validateTrigger={['onBlur']}\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请输入密码!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input\r\n                                type=\"password\"\r\n                                placeholder=\"请输入密码\"\r\n                            />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            name=\"remember\"\r\n                            valuePropName=\"checked\"\r\n                        >\r\n                            <Checkbox onChange={() => {\r\n                                this.setState({\r\n                                    checked: !this.state.checked\r\n                                })\r\n                            }}>记住密码</Checkbox>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item className=\"subButton\">\r\n                            <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\r\n                                登录\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class notFound extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                404\r\n            </div>\r\n        )\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/3.3dbbbff6.jpg\";","import React from 'react';\r\nimport { PageHeader, Table, Button, Modal, Form, Input, Upload, message, Popconfirm } from 'antd';\r\nimport ImgCrop from 'antd-img-crop';\r\nimport Draggable from 'react-draggable';\r\nimport fetch from '../../fetch/api';\r\nimport './index.less';\r\nimport { getBase64,apiBaseUrl,resourceUrl } from '../../utils/common';\r\n\r\nexport default class musicList extends React.Component {\r\n    state = {\r\n        musicList: [], // 音乐所有数据\r\n        columns: [\r\n            {\r\n                title: 'id',\r\n                dataIndex: 'id',\r\n                key: 'id',\r\n                render: text => {\r\n                    return <span>{text}</span>\r\n                },\r\n            },\r\n            {\r\n                title: '音乐名称',\r\n                dataIndex: 'musicName',\r\n                key: 'musicName',\r\n            },\r\n            {\r\n                title: '作者',\r\n                dataIndex: 'musicAuthor',\r\n                key: 'musicAuthor',\r\n            },\r\n            {\r\n                title: '音乐图片',\r\n                key: 'musicImg',\r\n                dataIndex: 'musicImg',\r\n            },\r\n            {\r\n                title: '音乐地址',\r\n                key: 'musicUrl',\r\n                dataIndex: 'musicUrl',\r\n            },\r\n            {\r\n                title: '操作',\r\n                render: (data) => {\r\n                    return (\r\n                        <div>\r\n                            <Button type=\"primary\" icon={<i className=\"iconfont icon-xiugai\"></i>} style={{ marginRight: '10px' }} onClick={() => {\r\n                                this.EditTable(data);\r\n                            }}> 修改</Button>\r\n                            <Popconfirm\r\n                                title=\"确定要删除当前音乐吗?\"\r\n                                onConfirm={()=>{\r\n                                    this.deleteTable(data)\r\n                                }}\r\n                                okText=\"确定\"\r\n                                cancelText=\"取消\"\r\n                                placement=\"top\"\r\n                            >\r\n                                <Button type=\"primary\" danger icon={<i className=\"iconfont icon-shanchu\"></i>}> 删除</Button>\r\n                            </Popconfirm>,\r\n\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        ],\r\n        pagination: {\r\n            defaultPageSize: 10,  // 每页大小\r\n        },\r\n        visible: false,  //添加、编辑弹出框 展示状态\r\n        disabled: true,\r\n        bounds: { left: 0, top: 0, bottom: 0, right: 0 },\r\n        moduleTitle: '',  // 添加、编辑 title动态切换\r\n        fileList: [], // 已上传图片\r\n        fileMusicList: [], // 已上传音乐\r\n        fileLyricList: [], // 已上传歌词\r\n        previewVisible: false,  // 图片预览弹出框 展示状态\r\n        previewImage: '',  // 预览图片地址\r\n        previewTitle: '',  // 预览图片 title\r\n        moduleStatus: '',  // 弹出框是添加还是修改\r\n        editId: '',  // 修改列id\r\n        musicName: '',  // 编辑音乐名称\r\n        musicAuthor: '',  // 编辑音乐作者\r\n        loading: true, // 表格加载状态\r\n    }\r\n\r\n    // 实现 module 弹出框可拖动\r\n    draggleRef = React.createRef();\r\n\r\n    // 获取数据\r\n    componentDidMount() {\r\n        this.renderTable();\r\n    }\r\n\r\n    renderTable = () => {\r\n        fetch.musicList({}).then(res => {\r\n            if (res.success) {\r\n                this.setState({\r\n                    musicList: res.data,\r\n                    loading: false\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    // 添加弹出框\r\n    addMusic = () => {\r\n        this.setState({\r\n            visible: true,\r\n            moduleTitle: '添加',\r\n            moduleStatus: 'add',\r\n            musicName: '',\r\n            musicAuthor: '',\r\n            fileList: [],\r\n            fileMusicList: [],\r\n            fileLyricList: []\r\n        });\r\n    }\r\n\r\n    // 编辑弹出框\r\n    EditTable = (data) => {\r\n        console.log(data);\r\n        this.setState({\r\n            visible: true,\r\n            moduleTitle: '修改',\r\n            moduleStatus: 'edit',\r\n            editId: data.id,\r\n            musicName: data.musicName,\r\n            musicAuthor: data.musicAuthor,\r\n            fileList: [{\r\n                uid: '1',\r\n                name: data.musicImg.split('\\\\')[data.musicImg.split('\\\\').length - 1],\r\n                status: 'done',\r\n                url: resourceUrl + data.musicImg,\r\n                response: {\r\n                    filePath: data.musicImg,\r\n                }\r\n            }],\r\n            fileMusicList: [{\r\n                uid: '2',\r\n                name: data.musicUrl.split('\\\\')[data.musicUrl.split('\\\\').length - 1],\r\n                status: 'done',\r\n                response: {\r\n                    filePath: data.musicUrl,\r\n                }\r\n            }],\r\n            fileLyricList:  data.lyric ? [{\r\n                uid: '3',\r\n                name: data.lyric.split('\\\\')[data.lyric.split('\\\\').length - 1],\r\n                status: 'done',\r\n                response: {\r\n                    filePath: data.lyric,\r\n                }\r\n            }] : []\r\n        });\r\n    }\r\n\r\n    // 删除数据\r\n    deleteTable = (data) => {\r\n        console.log(data);\r\n        fetch.delMusic({ id: data.id }).then(res => {\r\n            if (res.success) {\r\n                message.success(res.message);\r\n                this.renderTable();\r\n            }\r\n        })\r\n    }\r\n\r\n    // 确定按钮\r\n    handleOk = e => {\r\n        console.log(e);\r\n        // 提交表单数据\r\n        this.musicFrom.validateFields().then(value => {\r\n            console.log(value);\r\n            let params = {\r\n                musicAuthor: value.musicAuthor,\r\n                musicName: value.musicName,\r\n                uploadImg: this.state.fileList[0].response.filePath,\r\n                uploadMusic: this.state.fileMusicList[0].response.filePath,\r\n                uploadLyric: this.state.fileLyricList[0] ? this.state.fileLyricList[0].response.filePath : '',\r\n            }\r\n\r\n            if (this.state.moduleStatus === 'add') {\r\n                fetch.addMusic(params).then(res => {\r\n                    if (res.success) {\r\n                        console.log(res);\r\n                        this.setState({\r\n                            visible: false,\r\n                        });\r\n                        message.success(res.message);\r\n                        this.renderTable();\r\n                    }\r\n                })\r\n            } else {\r\n                params.id = this.state.editId;\r\n                fetch.eidtMusic(params).then(res => {\r\n                    if (res.success) {\r\n                        console.log(res);\r\n                        this.setState({\r\n                            visible: false,\r\n                        });\r\n                        message.success(res.message);\r\n                        this.renderTable();\r\n                    }\r\n                })\r\n            }\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    };\r\n\r\n    // 添加修改弹出框 取消按钮\r\n    handleCancel = e => {\r\n        console.log(e);\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n\r\n    // 图片预览取消按钮\r\n    handlePriviewCancel = e => {\r\n        console.log(e);\r\n        this.setState({\r\n            previewVisible: false,\r\n        });\r\n    };\r\n\r\n    // 记录弹出框移动位置\r\n    onStart = (event, uiData) => {\r\n        const { clientWidth, clientHeight } = window?.document?.documentElement;\r\n        const targetRect = this.draggleRef?.current?.getBoundingClientRect();\r\n        this.setState({\r\n            bounds: {\r\n                left: -targetRect?.left + uiData?.x,\r\n                right: clientWidth - (targetRect?.right - uiData?.x),\r\n                top: -targetRect?.top + uiData?.y,\r\n                bottom: clientHeight - (targetRect?.bottom - uiData?.y),\r\n            },\r\n        });\r\n    };\r\n\r\n    // 图片上传回调\r\n    onChange = ({ fileList }) => {\r\n        this.setState({\r\n            fileList\r\n        })\r\n    };\r\n\r\n    // 音乐上传回调\r\n    onMusicChange = ({ fileList }) => {\r\n        this.setState({\r\n            fileMusicList: fileList\r\n        })\r\n    };\r\n\r\n     // 歌词上传回调\r\n     onLyricChange = ({ fileList }) => {\r\n         console.log(fileList);\r\n        this.setState({\r\n            fileLyricList: fileList\r\n        })\r\n    };\r\n\r\n    // 图片上传预览\r\n    handlePreview = async file => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj);\r\n        }\r\n\r\n        this.setState({\r\n            previewImage: file.url || file.preview,\r\n            previewVisible: true,\r\n            previewTitle: file.name || file.url.substring(file.url.lastIndexOf('/') + 1),\r\n        });\r\n    };\r\n\r\n    // 自定义获取表单数据\r\n    normFile = (e) => {\r\n        if (Array.isArray(e)) {\r\n            return e;\r\n        }\r\n        return e && e.fileList;\r\n    };\r\n\r\n    render() {\r\n        const { bounds, disabled, visible, moduleTitle, previewVisible, previewImage, previewTitle, fileList, fileMusicList, fileLyricList, musicName, musicAuthor,loading } = this.state;\r\n\r\n        return (\r\n            <div className=\"music_list\">\r\n                <PageHeader\r\n                    className=\"site-page-header\"\r\n                    title=\"音乐列表\"\r\n                    subTitle=\"音乐列表列表查询、操作\"\r\n                />\r\n                {/* 表格渲染 */}\r\n                <div className=\"music_table\">\r\n                    <Button type=\"primary\" onClick={this.addMusic}>添加music</Button>\r\n                    <Table loading={loading} columns={this.state.columns} dataSource={this.state.musicList} rowKey=\"id\" bordered={true} pagination={\r\n                        this.state.pagination\r\n                    } />\r\n                </div>\r\n                <Modal\r\n                    title={\r\n                        <div\r\n                            style={{\r\n                                width: '100%',\r\n                                cursor: 'move',\r\n                            }}\r\n                            onMouseOver={() => {\r\n                                if (disabled) {\r\n                                    this.setState({\r\n                                        disabled: false,\r\n                                    });\r\n                                }\r\n                            }}\r\n                            onMouseOut={() => {\r\n                                this.setState({\r\n                                    disabled: true,\r\n                                });\r\n                            }}\r\n                        >\r\n                            {moduleTitle}\r\n                        </div>\r\n                    }\r\n                    destroyOnClose={true}\r\n                    visible={visible}\r\n                    cancelText=\"取消\"\r\n                    okText=\"确定\"\r\n                    onOk={this.handleOk}\r\n                    onCancel={this.handleCancel}\r\n                    modalRender={modal => (\r\n                        <Draggable\r\n                            disabled={disabled}\r\n                            bounds={bounds}\r\n                            onStart={(event, uiData) => this.onStart(event, uiData)}\r\n                        >\r\n                            <div ref={this.draggleRef}>{modal}</div>\r\n                        </Draggable>\r\n                    )}\r\n                >\r\n                    <Form\r\n                        name=\"basic\"\r\n                        labelCol={{ span: 6 }}\r\n                        wrapperCol={{ span: 16 }}\r\n                        onFinish={this.onFinish}\r\n                        onFinishFailed={this.onFinishFailed}\r\n                        autoComplete=\"off\"\r\n                        ref={com => { this.musicFrom = com }}\r\n                        initialValues={{\r\n                            musicName: musicName,\r\n                            musicAuthor: musicAuthor,\r\n                            uploadMusic: fileMusicList,\r\n                            uploadLyric: fileLyricList,\r\n                        }}\r\n                    >\r\n                        <Form.Item\r\n                            label=\"音乐名称\"\r\n                            name=\"musicName\"\r\n                            rules={[{ required: true, message: '请输入音乐名称!' }]}\r\n                        >\r\n                            <Input type=\"text\" value={musicName} />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"作者\"\r\n                            name=\"musicAuthor\"\r\n                            rules={[{ required: true, message: '请输入音乐作者!' }]}\r\n                        >\r\n                            <Input type=\"text\" value={musicAuthor} />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"uploadMusic\"\r\n                            label=\"上传音乐\"\r\n                            valuePropName=\"fileList\"\r\n                            getValueFromEvent={this.normFile}\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    validator: (_, value) => {\r\n                                        return fileMusicList.length > 0 ? Promise.resolve() : Promise.reject(new Error('请上传音乐文件'))\r\n                                    }\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <Upload\r\n                                action={apiBaseUrl + \"/admin/upload\"}\r\n                                data={{\r\n                                    type: 'mp3'\r\n                                }}\r\n                                multiple={false}\r\n                                defaultFileList={fileMusicList}\r\n                                onChange={this.onMusicChange}\r\n                                maxCount={1}\r\n                                listType=\"picture\"\r\n                                accept=\"audio/*\"\r\n                                >\r\n                                <Button>点击上传音乐文件</Button>\r\n                            </Upload>\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"uploadLyric\"\r\n                            label=\"上传歌词\"\r\n                            valuePropName=\"fileList\"\r\n                            getValueFromEvent={this.normFile}\r\n                            // rules={[\r\n                            //     {\r\n                            //         required: true,\r\n                            //         validator: (_, value) => {\r\n                            //             return fileLyricList.length > 0 ? Promise.resolve() : Promise.reject(new Error('请上传歌词'))\r\n                            //         }\r\n                            //     }\r\n                            // ]}\r\n                        >\r\n                            <Upload\r\n                                action={apiBaseUrl + \"/admin/upload\"}\r\n                                data={{\r\n                                    type: 'lyric'\r\n                                }}\r\n                                multiple={false}\r\n                                defaultFileList={fileLyricList}\r\n                                onChange={this.onLyricChange}\r\n                                maxCount={1}\r\n                                listType=\"picture\"\r\n                                >\r\n                                <Button>点击上传歌词</Button>\r\n                            </Upload>\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            label=\"上传图片\"\r\n                            name=\"uploadImg\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    validator: (_, value) => {\r\n                                        return fileList.length > 0 ? Promise.resolve() : Promise.reject(new Error('请上传图片'))\r\n                                    }\r\n                                }\r\n                            ]}\r\n                            valuePropName=\"fileList\"\r\n                            accept=\"image/*\"\r\n                            getValueFromEvent={this.normFile}\r\n                        >\r\n                            <ImgCrop rotate>\r\n                                <Upload\r\n                                    action={apiBaseUrl + \"/admin/upload\"}\r\n                                    listType=\"picture-card\"\r\n                                    fileList={fileList}\r\n                                    onPreview={this.handlePreview}\r\n                                    onChange={this.onChange}\r\n                                    multiple={false}\r\n                                    maxCount={1}\r\n                                    data={{\r\n                                        type: 'img'\r\n                                    }}\r\n                                >\r\n                                    {fileList.length < 1 && '+ Upload'}\r\n                                </Upload>\r\n                            </ImgCrop>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>\r\n                <Modal\r\n                    visible={previewVisible}\r\n                    title={previewTitle}\r\n                    footer={null}\r\n                    onCancel={this.handlePriviewCancel}\r\n                >\r\n                    <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}","import { Transfer, Button } from 'antd';\r\nimport React from 'react';\r\n\r\nexport default class transfer extends React.Component {\r\n    state = {\r\n        disabled: false,\r\n        allList: this.props.musicList,  // 全部数据\r\n        targetKeys: this.props.selectKey.map(Number)  // 当前选中数据\r\n    };\r\n\r\n    handleChange = (nextTargetKeys, direction, moveKeys) => {\r\n        this.setState({ targetKeys: nextTargetKeys });\r\n\r\n        console.log('targetKeys: ', nextTargetKeys);\r\n        console.log('direction: ', direction);\r\n        console.log('moveKeys: ', moveKeys);\r\n    };\r\n\r\n    // 映射数据\r\n    mapData = (data) => {\r\n        return data.map(ele => {\r\n            return {\r\n                key: ele.id,\r\n                title: ele.musicName,\r\n                disabled: false,\r\n            }\r\n        })\r\n    }\r\n\r\n    // 获取选中数据的key\r\n    getSelectId = () => {\r\n        this.props.getSelectId(this.state.targetKeys);\r\n    }\r\n\r\n    render() {\r\n        const { targetKeys, disabled, allList } = this.state;\r\n        return (\r\n            <>\r\n                <Transfer\r\n                    showSearch\r\n                    dataSource={this.mapData(allList)}  // 全部数据\r\n                    titles={['未选数据', '选中数据']}\r\n                    targetKeys={targetKeys}\r\n                    locale={{\r\n                        itemUnit: '项', itemsUnit: '项', searchPlaceholder: '请输入搜索内容'\r\n                    }}\r\n                    onChange={this.handleChange}\r\n                    onSelectChange={this.handleSelectChange}\r\n                    render={item => item.title}\r\n                    disabled={disabled}\r\n                    oneWay\r\n                    listStyle={{\r\n                        height: 300,\r\n                        width: 'auto'\r\n                    }}\r\n                    style={{ marginBottom: 16 }}\r\n                />\r\n                <div style={{ textAlign: 'right' }}>\r\n                    <Button type=\"primary\" style={{ marginRight: '10px' }} onClick={this.getSelectId}>确定</Button>\r\n                    <Button onClick={() => {\r\n                        this.props.cancel();\r\n                    }}>取消</Button>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { PageHeader, Table, Button, Modal, Form, Input, Upload, message, Popconfirm, Tag } from 'antd';\r\nimport ImgCrop from 'antd-img-crop';\r\nimport Draggable from 'react-draggable';\r\nimport fetch from '../../fetch/api';\r\nimport './index.less';\r\nimport { getBase64, apiBaseUrl, resourceUrl } from '../../utils/common';\r\nimport Transfer from '../Transfer/index';\r\n\r\nexport default class classify extends React.Component {\r\n    state = {\r\n        MusicClassifyList: [],  // 音乐分类列表数据\r\n        columns: [\r\n            {\r\n                title: 'id',\r\n                dataIndex: 'id',\r\n                key: 'id',\r\n                render: text => {\r\n                    return <span>{text}</span>\r\n                },\r\n            },\r\n            {\r\n                title: '分类名称',\r\n                dataIndex: 'music_classify_name',\r\n                key: 'music_classify_name',\r\n                render: (data) => {\r\n                    return <Tag style={{ fontSize: '14px' }} color=\"red\">{data}</Tag>\r\n                }\r\n            },\r\n            {\r\n                title: '分类图片',\r\n                dataIndex: 'music_classify_img',\r\n                key: 'music_classify_img',\r\n            },\r\n            {\r\n                title: '操作',\r\n                render: (data) => {\r\n                    return (\r\n                        <div>\r\n                            <Button type=\"primary\" icon={<i className=\"iconfont icon-xiugai\"></i>} style={{ marginRight: '10px' }} onClick={() => {\r\n                                this.EditTable(data);\r\n                            }}> 修改</Button>\r\n                            <Button onClick={() => {\r\n                                this.bindMusic(data)\r\n                            }} style={{ marginRight: '10px' }} type=\"primary\" icon={<i className=\"iconfont icon-shanchu\"></i>}> 绑定</Button>\r\n                            <Popconfirm\r\n                                title=\"确定要删除当前音乐吗?\"\r\n                                onConfirm={() => {\r\n                                    this.deleteTable(data)\r\n                                }}\r\n                                okText=\"确定\"\r\n                                cancelText=\"取消\"\r\n                                placement=\"top\"\r\n                            >\r\n                                <Button type=\"primary\" danger icon={<i className=\"iconfont icon-shanchu\"></i>}> 删除</Button>\r\n                            </Popconfirm>,\r\n\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        ],\r\n        pagination: {\r\n            defaultPageSize: 10, // 分页\r\n        },\r\n        visible: false,  // 添加弹出框展示状态\r\n        disabled: true,\r\n        bounds: { left: 0, top: 0, bottom: 0, right: 0 },\r\n        moduleTitle: '',  // 添加修改title\r\n        fileList: [], // 已上传图片\r\n        previewVisible: false,  // 图片预览弹框展示状态\r\n        previewImage: '',  // 预览图片\r\n        previewTitle: '',  // 预览图片弹框title 根据图片名称定义\r\n        moduleStatus: '',  // 弹出框是添加还是修改\r\n        editId: '',  // 修改列id\r\n        classifyName: '',  // 分类名称\r\n        musicList: [],  // 所有音乐\r\n        selectKey: [], // 当前分类已绑定音乐id\r\n        transferVisible: false,  // 穿梭组件弹出框 展示状态\r\n        loading: true, // 表格加载状态\r\n    }\r\n\r\n    // 实现 module 弹出框可拖动\r\n    draggleRef = React.createRef();\r\n\r\n    // 获取数据\r\n    componentDidMount() {\r\n        this.renderTable();\r\n        this.getMusicList();\r\n    }\r\n\r\n    // 获取全部音乐数据\r\n    getMusicList = () => {\r\n        fetch.musicList({}).then(res => {\r\n            this.setState({\r\n                musicList: res.data\r\n            })\r\n        })\r\n    }\r\n\r\n    // 渲染分类table表格\r\n    renderTable = () => {\r\n        fetch.getMusicClassify({}).then(res => {\r\n            if (res.success) {\r\n                this.setState({\r\n                    MusicClassifyList: res.data,\r\n                    loading: false,\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    // 添加弹出框\r\n    addMusic = () => {\r\n        this.setState({\r\n            visible: true,\r\n            moduleTitle: '添加分类',\r\n            moduleStatus: 'add',\r\n            classifyName: '',\r\n            fileList: [],\r\n        });\r\n    }\r\n\r\n    // 编辑弹出框\r\n    EditTable = (data) => {\r\n        console.log(data);\r\n        this.setState({\r\n            visible: true,\r\n            moduleTitle: '修改分类',\r\n            moduleStatus: 'edit',\r\n            editId: data.id,\r\n            classifyName: data.music_classify_name,\r\n            fileList: [{\r\n                uid: '1',\r\n                name: data.music_classify_name,\r\n                status: 'done',\r\n                url: resourceUrl + data.music_classify_img,\r\n                response: {\r\n                    filePath: data.musicImg,\r\n                }\r\n            }]\r\n        });\r\n    }\r\n\r\n    // 删除数据\r\n    deleteTable = (data) => {\r\n        console.log(data);\r\n        fetch.delMusicClassify({ id: data.id }).then(res => {\r\n            if (res.success) {\r\n                message.success(res.message);\r\n                this.renderTable();\r\n            }\r\n        })\r\n    }\r\n\r\n    // 绑定弹出框\r\n    bindMusic = (data) => {\r\n        this.setState({\r\n            transferVisible: true,\r\n            selectKey: JSON.parse(data.music_classify_content) || [],\r\n            editId: data.id,\r\n        })\r\n    }\r\n\r\n    // 修改绑定数据\r\n    getSelectId = (data) => {\r\n        console.log(data);\r\n        fetch.editClassifyBind({\r\n            classifyList: JSON.stringify(data),\r\n            id: this.state.editId\r\n        }).then(res => {\r\n            if (res.success) {\r\n                message.success(res.message);\r\n                this.renderTable();\r\n                this.setState({\r\n                    transferVisible: false\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    // 修改分类数据\r\n    handleOk = e => {\r\n        console.log(e);\r\n        // 提交表单数据\r\n        this.musicFrom.validateFields().then(value => {\r\n            console.log(value);\r\n            let params = {\r\n                classifyName: value.classifyName,\r\n                classifyImg: this.state.fileList[0].response.filePath,\r\n            }\r\n\r\n            console.log(params)\r\n            if (this.state.moduleStatus === 'add') {\r\n                fetch.addMusicClassify(params).then(res => {\r\n                    if (res.success) {\r\n                        console.log(res);\r\n                        this.setState({\r\n                            visible: false,\r\n                        });\r\n                        message.success(res.message);\r\n                        this.renderTable();\r\n                    }\r\n                })\r\n            } else {\r\n                params.id = this.state.editId;\r\n                fetch.editMusicClassify(params).then(res => {\r\n                    if (res.success) {\r\n                        console.log(res);\r\n                        this.setState({\r\n                            visible: false,\r\n                        });\r\n                        message.success(res.message);\r\n                        this.renderTable();\r\n                    }\r\n                })\r\n            }\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    };\r\n\r\n    // 添加修改弹出框 取消按钮\r\n    handleCancel = e => {\r\n        console.log(e);\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n\r\n    // 图片预览取消按钮\r\n    handlePriviewCancel = e => {\r\n        console.log(e);\r\n        this.setState({\r\n            previewVisible: false,\r\n        });\r\n    };\r\n\r\n    // 穿梭组件取消按钮\r\n    handleTransferCancel = () => {\r\n        this.setState({\r\n            transferVisible: false,\r\n        });\r\n    }\r\n\r\n    // 记录弹出框移动位置\r\n    onStart = (event, uiData) => {\r\n        const { clientWidth, clientHeight } = window?.document?.documentElement;\r\n        const targetRect = this.draggleRef?.current?.getBoundingClientRect();\r\n        this.setState({\r\n            bounds: {\r\n                left: -targetRect?.left + uiData?.x,\r\n                right: clientWidth - (targetRect?.right - uiData?.x),\r\n                top: -targetRect?.top + uiData?.y,\r\n                bottom: clientHeight - (targetRect?.bottom - uiData?.y),\r\n            },\r\n        });\r\n    };\r\n\r\n    // 图片上传回调\r\n    onChange = ({ fileList }) => {\r\n        this.setState({\r\n            fileList\r\n        })\r\n    };\r\n\r\n    // 图片上传预览\r\n    handlePreview = async file => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj);\r\n        }\r\n\r\n        this.setState({\r\n            previewImage: file.url || file.preview,\r\n            previewVisible: true,\r\n            previewTitle: file.name || file.url.substring(file.url.lastIndexOf('/') + 1),\r\n        });\r\n    };\r\n\r\n    // 自定义获取表单数据\r\n    normFile = (e) => {\r\n        if (Array.isArray(e)) {\r\n            return e;\r\n        }\r\n        return e && e.fileList;\r\n    };\r\n\r\n    // 设置是否运行展开二级table\r\n    rowExpandable = (record) => {\r\n        return record.music_classify_content ? true : false;\r\n    }\r\n\r\n    // 设置二级table数据\r\n    expandedRowRender = (record, index, indent, expanded) => {\r\n        console.log(record, index, indent, expanded);\r\n        let list = [];\r\n        JSON.parse(record.music_classify_content).forEach(id => {\r\n            this.state.musicList.forEach(ele => {\r\n                if (ele.id === id) {\r\n                    list.push(ele)\r\n                }\r\n            })\r\n        });\r\n\r\n        const columns = [\r\n            {\r\n                title: '歌曲名称', dataIndex: 'musicName', key: 'musicName',\r\n                render: (data) => (\r\n                    <Tag style={{ fontSize: '14px' }} color=\"#2db7f5\">{data}</Tag>\r\n                )\r\n            },\r\n            { title: '作者', dataIndex: 'musicAuthor', key: 'musicAuthor' },\r\n            { title: '音乐地址', dataIndex: 'musicUrl', key: 'musicUrl' },\r\n        ];\r\n\r\n        return <Table columns={columns} rowKey=\"id\" dataSource={list} pagination={false} />;\r\n    };\r\n\r\n    render() {\r\n        const { bounds, disabled, visible, moduleTitle, previewVisible, previewImage, previewTitle, fileList, classifyName, transferVisible, musicList, selectKey,loading } = this.state;\r\n\r\n        return (\r\n            <div className=\"music_classify_list\">\r\n                <PageHeader\r\n                    className=\"site-page-header\"\r\n                    title=\"音乐列表\"\r\n                    subTitle=\"音乐列表列表查询、操作\"\r\n                />\r\n                {/* 表格渲染 */}\r\n                <div className=\"music_classify_table\">\r\n                    <Button type=\"primary\" onClick={this.addMusic}>添加分类</Button>\r\n                    <Table columns={this.state.columns} loading={ loading } bordered={true} dataSource={this.state.MusicClassifyList} expandable={{ expandedRowRender: this.expandedRowRender }} rowKey=\"id\" rowExpandable={this.rowExpandable} pagination={\r\n                        this.state.pagination\r\n                    } />\r\n                </div>\r\n                <Modal\r\n                    title={\r\n                        <div\r\n                            style={{\r\n                                width: '100%',\r\n                                cursor: 'move',\r\n                            }}\r\n                            onMouseOver={() => {\r\n                                if (disabled) {\r\n                                    this.setState({\r\n                                        disabled: false,\r\n                                    });\r\n                                }\r\n                            }}\r\n                            onMouseOut={() => {\r\n                                this.setState({\r\n                                    disabled: true,\r\n                                });\r\n                            }}\r\n                        >\r\n                            {moduleTitle}\r\n                        </div>\r\n                    }\r\n                    destroyOnClose={true}\r\n                    visible={visible}\r\n                    cancelText=\"取消\"\r\n                    okText=\"确定\"\r\n                    onOk={this.handleOk}\r\n                    onCancel={this.handleCancel}\r\n                    modalRender={modal => (\r\n                        <Draggable\r\n                            disabled={disabled}\r\n                            bounds={bounds}\r\n                            onStart={(event, uiData) => this.onStart(event, uiData)}\r\n                        >\r\n                            <div ref={this.draggleRef}>{modal}</div>\r\n                        </Draggable>\r\n                    )}\r\n                >\r\n                    <Form\r\n                        name=\"basic\"\r\n                        labelCol={{ span: 6 }}\r\n                        wrapperCol={{ span: 16 }}\r\n                        onFinish={this.onFinish}\r\n                        onFinishFailed={this.onFinishFailed}\r\n                        autoComplete=\"off\"\r\n                        ref={com => { this.musicFrom = com }}\r\n                        initialValues={{\r\n                            classifyName: classifyName\r\n                        }}\r\n                    >\r\n                        <Form.Item\r\n                            label=\"分类名称\"\r\n                            name=\"classifyName\"\r\n                            rules={[{ required: true, message: '请输入分类名称!' }]}\r\n                        >\r\n                            <Input type=\"text\" value={classifyName} />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            label=\"分类图片\"\r\n                            name=\"classifyImg\"\r\n                            rules={[\r\n                                {\r\n                                    validator: (_, value) => {\r\n                                        return fileList.length > 0 ? Promise.resolve() : Promise.reject(new Error('请上传图片'))\r\n                                    }\r\n                                }\r\n                            ]}\r\n                            valuePropName=\"fileList\"\r\n                            accept=\"image/*\"\r\n                            getValueFromEvent={this.normFile}\r\n                        >\r\n                            <ImgCrop rotate>\r\n                                <Upload\r\n                                    action={apiBaseUrl + \"/admin/upload\"}\r\n                                    listType=\"picture-card\"\r\n                                    fileList={fileList}\r\n                                    onPreview={this.handlePreview}\r\n                                    onChange={this.onChange}\r\n                                    multiple={false}\r\n                                    maxCount={1}\r\n                                    data={{\r\n                                        type: 'img'\r\n                                    }}\r\n                                >\r\n                                    {fileList.length < 1 && '+ Upload'}\r\n                                </Upload>\r\n                            </ImgCrop>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>\r\n                {/* 图片预览 */}\r\n                <Modal\r\n                    visible={previewVisible}\r\n                    title={previewTitle}\r\n                    footer={null}\r\n                    onCancel={this.handlePriviewCancel}\r\n                >\r\n                    <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n                </Modal>\r\n                {/* 穿梭组件 */}\r\n                <Modal\r\n                    visible={transferVisible}\r\n                    title='选中分类数据'\r\n                    footer={null}\r\n                    onCancel={this.handleTransferCancel}\r\n                    zIndex={1001}\r\n                    destroyOnClose={true}\r\n                >\r\n                    <Transfer musicList={musicList} selectKey={selectKey} getSelectId={this.getSelectId} cancel={this.handleTransferCancel}></Transfer>\r\n                </Modal>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { PageHeader, Table, Popconfirm, Tag, Button,message } from 'antd';\r\nimport fetch from '../../fetch/api';\r\nimport './index.less';\r\n\r\nexport default class userList extends React.Component {\r\n    state = {\r\n        data: [],\r\n        pagination: {\r\n            defaultPageSize: 10, // 分页\r\n        },\r\n        loading: true,\r\n        columns: [\r\n            {\r\n                title: 'id',\r\n                dataIndex: 'id',\r\n                key: 'id',\r\n                render: text => {\r\n                    return <span>{text}</span>\r\n                },\r\n            },\r\n            {\r\n                title: '用户账号',\r\n                dataIndex: 'userAccount',\r\n                key: 'userAccount',\r\n                render: (data) => {\r\n                    return <Tag style={{ fontSize: '14px' }} color=\"red\">{data}</Tag>\r\n                }\r\n            },\r\n            {\r\n                title: '操作',\r\n                render: (data) => {\r\n                    return (\r\n                        <div>\r\n                            <Popconfirm\r\n                                title=\"确定要删除当前音乐吗?\"\r\n                                onConfirm={() => {\r\n                                    this.deleteTable(data)\r\n                                }}\r\n                                okText=\"确定\"\r\n                                cancelText=\"取消\"\r\n                                placement=\"top\"\r\n                            >\r\n                                <Button type=\"primary\" danger icon={<i className=\"iconfont icon-shanchu\"></i>}> 删除</Button>\r\n                            </Popconfirm>,\r\n\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        ]\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.renderTable();\r\n    }\r\n\r\n    renderTable = ()=>{\r\n        fetch.userList({}).then(res => {\r\n            if (res.success) {\r\n                this.setState({\r\n                    data: res.data,\r\n                    loading: false\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    deleteTable = (data) => {\r\n        fetch.delUser({\r\n            id: data.id\r\n        }).then(res=>{\r\n            if(res.success){\r\n                this.renderTable();\r\n                message.success(res.message);\r\n            }\r\n        })\r\n        console.log(data);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"userList\">\r\n                <PageHeader\r\n                    className=\"site-page-header\"\r\n                    title=\"用户列表\"\r\n                    subTitle=\"用户列表列表查询、操作\"\r\n                />\r\n                <div className=\"userTable\">\r\n                    <Table columns={this.state.columns} loading={this.state.loading} bordered={true} dataSource={this.state.data} rowKey=\"id\" pagination={\r\n                        this.state.pagination\r\n                    } />\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/1.3530cca0.jpg\";","import React from 'react';\r\nimport { PageHeader } from 'antd';\r\nimport themeImg from '../../static/img/1.jpg';\r\nimport './index.less';\r\n\r\nexport default class theme extends React.Component{\r\n    render(){\r\n\r\n        return(\r\n            <div className=\"theme\">\r\n                <PageHeader\r\n                    className=\"site-page-header\"\r\n                    title=\"主题\"\r\n                    subTitle=\"音乐数据展示\"\r\n                />\r\n                <div className=\"theme_con\">\r\n                    <img src={themeImg} alt=\"\" />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import { Menu,Dropdown } from 'antd';\r\nimport React from 'react';\r\nimport './index.less';\r\nimport headImg from '../../static/img/3.jpg';\r\nimport { Route,Redirect,Switch } from \"react-router-dom\";\r\nimport musicList from '../../components/musicList';\r\nimport classify from '../../components/classify';\r\nimport userList from '../../components/userList';\r\nimport theme from '../../components/theme';\r\nimport { delCookie } from '../../utils/common'\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nexport default class Sider extends React.Component {\r\n    state = {\r\n        theme: 'light',\r\n        current: '',\r\n        openKeys:[],\r\n    };\r\n\r\n    componentDidMount(){\r\n        console.log(this.props);\r\n        this.setState({\r\n            current: this.props.location.pathname\r\n        });\r\n        if(this.props.location.pathname === '/home/musicList' || this.props.location.pathname === '/home/classify'){\r\n            this.setState({\r\n                openKeys: ['music']\r\n            })\r\n        }else if(this.props.location.pathname === '/home/userList'){\r\n            this.setState({\r\n                openKeys: ['user']\r\n            })\r\n        }\r\n    }\r\n\r\n    changeTheme = value => {\r\n        this.setState({\r\n            theme: value ? 'dark' : 'light',\r\n        });\r\n    };\r\n\r\n    handleClick = e => {\r\n        console.log('click ', e);\r\n        this.setState({\r\n            current: e.key,\r\n        });\r\n        this.props.history.push(e.key);\r\n    };\r\n\r\n    onOpenChange = keys => {\r\n        this.setState({\r\n            openKeys: [keys[keys.length-1 < 0 ? 0 : keys.length-1]]\r\n        });\r\n        \r\n    };\r\n\r\n    logOut = ()=>{\r\n        delCookie('token');\r\n        this.props.history.push('/login')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"home\">\r\n                <div className=\"home_title\">\r\n                    <span>良子音乐</span>\r\n                    <Dropdown overlay={\r\n                        <Menu>\r\n                            <Menu.Item key=\"1\" onClick={this.logOut}>\r\n                                <span>退出登录</span>\r\n                            </Menu.Item>\r\n                        </Menu>\r\n                    } placement=\"bottomLeft\" arrow>\r\n                        <span className=\"home_headImg\">\r\n                            <img src={headImg} alt=\"\" />\r\n                        </span>\r\n                    </Dropdown>\r\n                </div>\r\n                <Menu\r\n                    theme={this.state.theme}\r\n                    onClick={this.handleClick}\r\n                    style={{ width: 256 }}\r\n                    openKeys={this.state.openKeys}\r\n                    selectedKeys={[this.state.current]}\r\n                    mode=\"inline\"\r\n                    className=\"home_menu\"\r\n                    onOpenChange={this.onOpenChange}\r\n                >\r\n                    <Menu.Item key=\"/home\" icon={<i className=\"iconfont icon-31shouyexuanzhong\"></i>}>\r\n                        主题\r\n                    </Menu.Item>\r\n                    <SubMenu key=\"music\" icon={<i className=\"iconfont icon-yinle\"></i>} title=\"音乐管理\">\r\n                        <Menu.Item key=\"/home/musicList\">音乐列表</Menu.Item>\r\n                        <Menu.Item key=\"/home/classify\">音乐分类</Menu.Item>\r\n                    </SubMenu>\r\n                    <SubMenu key=\"user\" icon={<i className=\"iconfont icon-yonghu\"></i>} title=\"用户管理\">\r\n                        <Menu.Item key=\"/home/userList\">用户列表</Menu.Item>\r\n                    </SubMenu>\r\n                </Menu>\r\n                <div className=\"home_content\">\r\n                    {/* 子路由 */}\r\n                    <Switch>\r\n                        <Route path='/home' exact component={theme}></Route>\r\n                        <Route path='/home/musicList' exact component={musicList}></Route>\r\n                        <Route path='/home/classify' exact component={classify}></Route>\r\n                        <Route path='/home/userList' exact component={userList}></Route>\r\n                        {/* /home/*: /home下的子路由路由不合法时跳转404页面 */}\r\n                        <Redirect from=\"/home/*\" to=\"/404\"></Redirect>\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import Login from '../page/login';\r\nimport notFound from '../page/notFound';\r\nimport Home from '../page/home';\r\n\r\nconst router = [\r\n    {\r\n        path: '/login',\r\n        name: 'Login',\r\n        component: Login,\r\n        auth: false\r\n    },\r\n    {\r\n        path: '/home',\r\n        name: 'Home',\r\n        component: Home,\r\n        auth: true\r\n    },\r\n    {\r\n        path: '/404',\r\n        name: 'notFound',\r\n        component: notFound,\r\n        auth: false\r\n    }\r\n]\r\n\r\nexport default router;","import { HashRouter as Router,Switch } from \"react-router-dom\";\nimport RoutingGuard from './router/RoutingGuard.js';\nimport router from './router/router.js';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"myLoading\">\n        <LoadingOutlined style={{fontSize: '30px'}} />\n      </div>\n      <Router>\n        <Switch>\n          <RoutingGuard routerList={router}></RoutingGuard>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'antd/dist/antd.css';\nimport './utils/common.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}